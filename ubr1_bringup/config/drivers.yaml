ubr_driver:
  ros__parameters:
    default_controllers:
      - "arm_controller.cartesian_pose"
      - "arm_controller.cartesian_twist"
      - "arm_controller.cartesian_wrench"
      - "arm_controller.follow_joint_trajectory"
      - "arm_controller.gravity_compensation"
      - "arm_with_torso_controller.follow_joint_trajectory"
      - "base_controller"
      - "head_controller.follow_joint_trajectory"
      - "head_controller.point_head"
      - "torso_controller.follow_joint_trajectory"
    arm_controller:
      cartesian_pose:
        type: "robot_controllers/CartesianPoseController"
        fb_trans:
          p: 0.75
          d: 0.0
          i: 0.02
          i_clamp: 0.1
        fb_rot:
          p: 0.25
          d: 0.0
          i: 0.02
          i_clamp: 0.1
      cartesian_twist:
        type: "robot_controllers/CartesianTwistController"
      cartesian_wrench:
        type: "robot_controllers/CartesianWrenchController"
      gravity_compensation:
        type: "robot_controllers/GravityCompensation"
        root: "torso_lift_link"
        tip: "gripper_link"
        autostart: true
      follow_joint_trajectory:
        type: "robot_controllers/FollowJointTrajectoryController"
        joints:
          - shoulder_pan_joint
          - shoulder_lift_joint
          - upperarm_roll_joint
          - elbow_flex_joint
          - forearm_roll_joint
          - wrist_flex_joint
          - wrist_roll_joint
    arm_with_torso_controller:
      follow_joint_trajectory:
        type: "robot_controllers/FollowJointTrajectoryController"
        joints:
          - torso_lift_joint
          - shoulder_pan_joint
          - shoulder_lift_joint
          - upperarm_roll_joint
          - elbow_flex_joint
          - forearm_roll_joint
          - wrist_flex_joint
          - wrist_roll_joint
    head_controller:
      follow_joint_trajectory:
        type: "robot_controllers/FollowJointTrajectoryController"
        joints:
          - head_pan_joint
          - head_tilt_joint
      point_head:
        type: "robot_controllers/PointHeadController"
    torso_controller:
      follow_joint_trajectory:
        type: "robot_controllers/FollowJointTrajectoryController"
        joints:
          - torso_lift_joint
    base_controller:
      type: "robot_controllers/DiffDriveBaseController"
      max_velocity_x: 1.0
      max_acceleration_x: 0.75
      # hold position
      moving_threshold: -0.01
      rotating_threshold: -0.01
      # autostart to get odom
      autostart: true
      # use laser to only slowly collide with things
      laser_safety_dist: 1.0
      # name of joints
      l_wheel_joints:
       - "base_l_wheel_joint"
      r_wheel_joints:
       - "base_r_wheel_joint"
      # tf will be published by ekf node
      publish_tf: false

ekf_node:
  ros__parameters:
    odom_frame: odom
    base_link_frame: base_link
    world_frame: odom

    two_d_mode: true

    frequency: 50

    odom0: base_controller/odom
    odom0_config: [false, false, false,   # x,   y,   z
                  false, false, false,   # r,   p,   w (yaw)
                  true,  true,  true,    # dx,  dy,  dz
                  false, false, true,    # dr,  dp,  dw
                  false, false, false]   # ddx, ddy, ddz
    odom0_differential: false
    odom0_nodelay: true
    odom0_queue_size: 10

    imu0: imu/filtered
    imu0_config: [false, false, false,   # x,   y,   z
                  false, false, false,   # r,   p,   w (yaw)
                  false, false, false,   # dx,  dy,  dz
                  true,  true,  true,    # dr,  dp,  dw
                  false, false, false]   # ddx, ddy, ddz
    imu0_differential: true
    imu0_nodelay: true
    imu0_queue_size: 10
    imu0_remove_gravitational_acceleration: true
