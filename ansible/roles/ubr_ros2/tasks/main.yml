---
# ROS2 Setup
- name: Configure apt key for ROS2
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
  become: yes

- name: Configure apt sources for ROS2
  apt_repository:
    repo: 'deb [arch=amd64,arm64] http://packages.ros.org/ros2/ubuntu {{ ansible_lsb.codename }} main'
    filename: 'ros2-latest'
    update_cache: yes
  become: yes

- name: Install base level ROS2 packages
  apt:
    pkg: ros-{{rosdistro}}-desktop
  become: yes

# Workspace setup
- name: Install vcstool
  apt:
    pkg: python3-vcstool
  become: yes

- name: Install rosdep
  apt:
    pkg: python3-rosdep
  become: yes

- name: Install colcon
  apt:
    pkg: python3-colcon-common-extensions
  become: yes

- name: Create workspace
  file:
    path: "{{ workspace_root }}/src"
    state: directory
    owner: ubr
    group: ubr
    mode: '2775'

- name: Setup workspace with vcstool
  shell: "vcs import src < {{ role_path }}/files/{{ rosdistro }}.repos"
  args:
    chdir: "{{ workspace_root }}"

- name: Update workspace with vcstool
  shell: "vcs pull src"
  args:
    chdir: "{{ workspace_root }}"

- name: Disable ubr1_gazebo (not currently building right)
  file:
    path: "{{ workspace_root }}/src/ubr_reloaded/ubr1_gazebo/CATKIN_IGNORE"
    state: touch
    owner: ubr
    group: ubr

- name: Install dependencies
  shell: rosdep update && rosdep install --from-paths src --ignore-src --rosdistro={{ rosdistro }} -y -r
  args:
    chdir: "{{ workspace_root }}"

- name: Build workspace
  shell: "colcon build --symlink-install"
  args:
    chdir: "{{ workspace_root }}"

# Launch setup
- name: Create /etc/ros/distro
  file:
    path: /etc/ros/{{ rosdistro }}
    state: directory
    owner: ros
    group: ros
    mode: '2775'
  become: yes

- name: Copy launch file to /etc/ros
  copy:
    src: "{{ workspace_root }}/src/ubr_reloaded/ubr1_bringup/launch/robot.launch.py"
    dest: "/etc/ros/{{ rosdistro }}/robot.launch.py"
    force: no
    mode: '0755'
  become: yes

- name: Create the Cyclone DDS config
  template:
    src: cyclonedds.j2
    dest: "/etc/ros/{{ rosdistro }}/cyclonedds.xml"
  become: yes

- name: Create a systemd service for robot drivers
  template:
    src: robot.j2
    dest: /etc/systemd/system/robot.service
  become: yes

- name: Start the robot service
  systemd:
    name: robot
    enabled: yes
    state: started
    daemon_reload: yes
  become: yes

# Hardware config
- name: Power off when button pressed
  shell: hostnamectl set-chassis vm
  become: yes
